{
  "frequency": "The node's natural oscillation frequency",
  "refractory_period": "The 'cooldown' time in ticks after a node fires",
  "base_threshold": "The coherence level required for the node to fire",
  "phase": "The initial phase of the node",
  "tick_interval": "The number of ticks between each emission",
  "tick_phase": "The phase of the ticks being emitted",
  "end_tick": "The tick at which this source should stop emitting",
  "attenuation": "A multiplier for how much a tick's amplitude is reduced",
  "density": "A property of the medium that can affect tick propagation",
  "delay": "The number of ticks it takes for a tick to cross the edge",
  "phase_shift": "The amount of phase to add or subtract from a tick",
  "weight": "General-purpose weight for the connection",
  "phase_offset": "A phase difference maintained by the bridge",
  "drift_tolerance": "How much phase shift the bridge can tolerate",
  "decoherence_limit": "The decoherence level at which the bridge might rupture",
  "initial_strength": "The starting strength of integrity of the bridge",
  "medium_type": "The type of medium the bridge represents",
  "mutable": "If the simulation can modify the bridge",
  "members": "Nodes included in the MetaNode",
  "phase_lock": "Enforces phase sync via tolerance",
  "coherence_tie": "Requires minimum coherence level",
  "shared_tick_input": "Forces nodes to tick in unison",
  "sync_topology": "Enforces identical edge structures",
  "role_lock": "Enforces same functional role across nodes",
  "type": "Informational tag: Configured or Emergent",
  "origin": "Event/tick that spawned the MetaNode (Emergent only)",
  "collapsed": "Whether to process the MetaNode as a single unit",
  "tolerance": "Allowable phase difference",
  "min_coherence": "Minimum coherence across members"
 ,
  "boundary_interaction_log.json": "Interactions with void or boundary nodes",
  "bridge_decay_log.json": "Gradual weakening of inactive bridges",
  "bridge_dynamics_log.json": "State changes for each bridge",
  "bridge_reformation_log.json": "Bridges reforming after rupture",
  "bridge_rupture_log.json": "Details of bridge failures",
  "bridge_state.json": "Snapshot of all bridge states per tick",
  "cluster_log.json": "Hierarchical clustering results",
  "coherence_log.json": "Node coherence values",
  "coherence_velocity_log.json": "Change in coherence between ticks",
  "collapse_chain_log.json": "Propagation chains triggered by collapse",
  "collapse_front_log.json": "First collapse tick for each node",
  "connectivity_log.json": "Number of links per node at load time",
  "curvature_log.json": "Delay adjustments from law-wave curvature",
  "decoherence_log.json": "Node decoherence levels",
  "inspection_log.json": "Superposition inspection summary",
  "interference_log.json": "Interference classification per node",
  "interpretation_log.json": "Aggregated metrics from the interpreter",
  "law_drift_log.json": "Refractory period adjustments",
  "law_wave_log.json": "Node law-wave frequencies",
  "layer_transition_log.json": "Tick transitions between LCCM layers",
  "magnitude_failure_log.json": "Ticks rejected for low magnitude",
  "meta_node_ticks.json": "Ticks emitted by meta nodes",
  "node_emergence_log.json": "New nodes created via propagation",
  "node_state_log.json": "Node type, credit and debt metrics",
  "observer_disagreement_log.json": "Difference between observers and reality",
  "propagation_failure_log.json": "Reasons tick propagation failed",
  "proper_time_log.json": "Cumulative subjective ticks per node",
  "refraction_log.json": "Rerouted ticks through alternative paths",
  "should_tick_log.json": "Results of tick emission checks",
  "stable_frequency_log.json": "Nodes with converged law-wave frequency values",
  "structural_growth_log.json": "Summary of SIP/CSP growth each tick",
  "tick_delivery_log.json": "Incoming tick phases for each node",
  "tick_drop_log.json": "Ticks discarded before firing",
  "tick_emission_log.json": "Ticks emitted by nodes",
  "tick_evaluation_log.json": "Evaluation results for each potential tick",
  "tick_propagation_log.json": "Ticks travelling across edges",
  "tick_seed_log.json": "Activity injected by the seeder"
 }
